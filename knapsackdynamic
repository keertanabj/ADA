#include <stdio.h>


int max(int a, int b) {
    return (a > b) ? a : b;
}


int knapsack(int W, int weights[], int values[], int n) {
    int dp[n+1][W+1];


    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                dp[i][w] = 0;
            else if (weights[i-1] <= w)
                dp[i][w] = max(values[i-1] + dp[i-1][w - weights[i-1]], dp[i-1][w]);
            else
                dp[i][w] = dp[i-1][w];
        }
    }


    int res = dp[n][W];
    int w = W;

    printf("\nSelected items (Weight, Value):\n");
    for (int i = n; i > 0 && res > 0; i--) {
        if (res == dp[i-1][w])
            continue;
        else {

            printf("(%d, %d)\n", weights[i-1], values[i-1]);


            res -= values[i-1];
            w -= weights[i-1];
        }
    }

    return dp[n][W];
}

int main() {
    int n, W;

    printf("Enter number of items: ");
    scanf("%d", &n);

    int weights[n], values[n];

    printf("Enter weights of items:\n");
    for (int i = 0; i < n; i++) {
        printf("Weight of item %d: ", i + 1);
        scanf("%d", &weights[i]);
    }

    printf("Enter values of items:\n");
    for (int i = 0; i < n; i++) {
        printf("Value of item %d: ", i + 1);
        scanf("%d", &values[i]);
    }

    printf("Enter capacity of knapsack: ");
    scanf("%d", &W);

    int maxValue = knapsack(W, weights, values, n);
    printf("\nMaximum value in knapsack = %d\n", maxValue);

    return 0;
}

